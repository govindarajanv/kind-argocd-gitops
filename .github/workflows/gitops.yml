# This is a basic workflow to help you get started with Actions

name: GitOps

on: push

jobs:
  create-cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.2.0
        with:
          cluster_name: "sandbox"
          config: ./argo-setup/kind.yaml

      - name: GitOps
        run: |
          sed -i '1 s/$/ argocd.local/' /etc/hosts
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.2.7/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd
          argocd version          
          kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.2/cert-manager.yaml
          sleep 30
          kubectl apply -f ./argo-setup/cert-issuer.yaml
          sleep 20
          
          kubectl create namespace argocd
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          sleep 30
          kubectl apply -f ./argo-setup/ingress.yaml
          kubectl get pods --all-namespaces
          kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo
          argocd login $(kubectl get service argocd-server -n argocd --output=jsonpath='{.status.loadBalancer.ingress[0].hostname}') --username admin --password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo) --insecure
          sleep 20
          argocd app create helm-guestbook --repo https://github.com/govindarajanv/kind-argocd-gitops.git --path helm-guestbook --dest-server https://kubernetes.default.svc --dest-namespace default
          sleep 20
          argocd app list
          argocd app get helm-guestbook
          kubectl port-forward svc/helm-guestbook 9090:80 &
          curl http://localhost:9090
          # argocd app set helm-guestbook --sync-policy automated
          workdone=0
          while true; do
            argocd app list
            kubectl get deployment --all-namespaces
            sleep 10
            argocd app sync helm-guestbook
            ((workdone=workdone+1))
            if [ "$workdone" -gt 30 ]; then
              break
            fi
          done

